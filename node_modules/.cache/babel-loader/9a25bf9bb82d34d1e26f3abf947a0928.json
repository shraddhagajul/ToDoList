{"ast":null,"code":"import _defineProperty from \"/home/shraddha/dapp-development/to-do-list/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/shraddha/dapp-development/to-do-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shraddha/dapp-development/to-do-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shraddha/dapp-development/to-do-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shraddha/dapp-development/to-do-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shraddha/dapp-development/to-do-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shraddha/dapp-development/to-do-list/src/TodoList.js\";\nimport React, { Component } from 'react';\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList() {\n    _classCallCheck(this, TodoList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoList).apply(this, arguments));\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n\n          _this.props.createTask(_this.task.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"newTask\",\n        ref: function ref(input) {\n          _this.task = input;\n        },\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Add task...\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        id: \"taskList\",\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.tasks.map(function (task, key) {\n        var _React$createElement;\n\n        return React.createElement(\"div\", (_React$createElement = {\n          className: \"taskTemplate\"\n        }, _defineProperty(_React$createElement, \"className\", \"checkbox\"), _defineProperty(_React$createElement, \"key\", key), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: task.id,\n          defaultChecked: task.completed,\n          onClick: function onClick(event) {\n            _this.props.toggleTask(task.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, task.content)));\n      })), React.createElement(\"ul\", {\n        id: \"completedTaskList\",\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n\n          _this2.props.createTask(_this2.task.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"newTask\",\n        ref: function ref(input) {\n          _this2.task = input;\n        },\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Add task...\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        id: \"taskList\",\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.tasks.map(function (task, key) {\n        var _React$createElement2;\n\n        return React.createElement(\"div\", (_React$createElement2 = {\n          className: \"taskTemplate\"\n        }, _defineProperty(_React$createElement2, \"className\", \"checkbox\"), _defineProperty(_React$createElement2, \"key\", key), _defineProperty(_React$createElement2, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: task.id,\n          defaultChecked: task.completed,\n          onClick: function onClick(event) {\n            _this2.props.toggleTask(task.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, task.content)));\n      })), React.createElement(\"ul\", {\n        id: \"completedTaskList\",\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nexport default TodoList;","map":{"version":3,"sources":["/home/shraddha/dapp-development/to-do-list/src/TodoList.js"],"names":["React","Component","TodoList","event","preventDefault","props","createTask","task","value","input","tasks","map","key","id","completed","toggleTask","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nclass TodoList extends  Component{\n    render() {\n        return (\n            <div id=\"content\">\n                <form onSubmit={(event) => {\n                    event.preventDefault();\n                    this.props.createTask(this.task.value)\n                }}>\n                    <input\n                        id=\"newTask\"\n                        ref={(input) => {\n                            this.task = input\n                        }}\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Add task...\"\n                        required />\n                    <input type=\"submit\" hidden={true} />\n                </form>\n                <ul id=\"taskList\" className=\"list-unstyled\">\n                    { this.props.tasks.map((task, key) => {\n                        return(\n                            <div className=\"taskTemplate\" className=\"checkbox\" key={key}>\n                                <label>\n                                    <input\n                                        type=\"checkbox\"\n                                        name={task.id}\n                                        defaultChecked={task.completed}\n                                        onClick={(event) => {\n                                            this.props.toggleTask(task.id) }}/>\n                                    <span className=\"content\">{task.content}</span>\n                                </label>\n                            </div>\n                        )\n                    })}\n                </ul>\n                <ul id=\"completedTaskList\" className=\"list-unstyled\">\n                </ul>\n            </div>\n        );\n    }render() {\n        return (\n            <div id=\"content\">\n                <form onSubmit={(event) => {\n                    event.preventDefault();\n                    this.props.createTask(this.task.value)\n                }}>\n                    <input\n                        id=\"newTask\"\n                        ref={(input) => {\n                            this.task = input\n                        }}\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Add task...\"\n                        required/>\n                    <input type=\"submit\" hidden={true}/>\n                </form>\n                <ul id=\"taskList\" className=\"list-unstyled\">\n                    {this.props.tasks.map((task, key) => {\n                        return (\n                            <div className=\"taskTemplate\" className=\"checkbox\" key={key}>\n                                <label>\n                                    <input\n                                        type=\"checkbox\"\n                                        name={task.id}\n                                        defaultChecked={task.completed}\n                                        onClick={(event) => {\n                                            this.props.toggleTask(task.id)\n                                        }}/>\n                                    <span className=\"content\">{task.content}</span>\n                                </label>\n                            </div>\n                        )\n                    })}\n                </ul>\n                <ul id=\"completedTaskList\" className=\"list-unstyled\">\n                </ul>\n            </div>\n        );\n    }\n}\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}